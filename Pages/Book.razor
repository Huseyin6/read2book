@page "/book"
@using read2book.Services
@inject IBookService BookService
@inject IJSRuntime JsRunTime

<div class="row">
    <div class="col-md-12">
        <h1>My Readed Books List</h1>
    </div>
</div>
<div class="row" style="margin-bottom: 10px;">
    <div class="col-md-12 text-right">
        @if(bookCount>0)
        {
            <span class="badge badge-pill badge-info"> 
                <strong style="padding:20px;">
                    <em>My Readed Books Count: @bookCount </em>
                </strong>
            </span>
        }
    </div>
</div>
@if(BookList==null)
{
    <em>Loading</em>
}
else
{
    <table class="table table-hover table-bordered">
        <thead>
            <tr class="table-info">
                <th scope="col">#</th>
                <th scope="col">Name</th>
                <th scope="col">Author</th>
                <th scope="col" class="hidden-xs">Begin Date</th>
                <th scope="col" class="hidden-xs">End Date</th>
                <th scope="col">Page</th>
                <th scope="col" class="hidden-xs">Abstract</th>
                <th scope="col"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var book in BookList)
            {
                Order++;
                <tr>
                    <th scope="row">@Order</th>
                    <td>@(book.Name.Length > 38 ? book.Name.Substring(0, 35) + " ..." : book.Name)</td>
                    <td>@(book.Author.Length > 38 ? book.Author.Substring(0, 35) + " ..." : book.Author)</td>
                    <td class="hidden-xs">@book.BeginToReadDate.ToShortDateString()</td>
                    <td class="hidden-xs">@(book.EndToReadDate.HasValue ? book.EndToReadDate.Value.ToShortDateString(): "Continue")</td>
                    <td>@book.PageCount</td>
                    <td class="hidden-xs">@(book.Abstract.Length > 38 ? book.Abstract.Substring(0, 35) + " ..." : book.Abstract)</td>
                    <td>
                        <div class="btn-group" role="group" style="margin:0!important">
                            <a href="@($"/detail/{book.Id}")" title="Detail" class="btn btn-info btn-sm" role="button">
                                <i class="fa fa-info-circle"></i>
                                <span class="hidden-sm hidden-xs" style="margin-left: 5px;">Detail</span>
                            </a>
                            <a href="@($"/edit/{book.Id}")" title="Edit" class="btn btn-primary btn-sm" role="button">
                                <i class="fa fa-pencil-square-o"></i>
                                <span class="hidden-sm hidden-xs" style="margin-left: 5px;">Edit</span>
                            </a>
                            <button class="btn btn-danger btn-sm" @onclick="@(() => Delete(book.Id))">
                                <i class="fa fa-trash-o"></i>
                                <span class="hidden-sm hidden-xs" style="margin-left: 5px;">Delete</span>
                            </button>
                        </div>
                    </td>
                   
                </tr>
            }
        </tbody>
    </table>
}

@code{
    private List<read2book.Data.Book> BookList;
    public int Order { get; set; }
    private int bookCount;
    protected override void OnInitialized()
    {
        Order = 0;
        BookList = BookService.GetAllBooks();
        bookCount = BookList.Count();
    }
    private async void Delete(int id)
    {
        var result = await JsRunTime.InvokeAsync<bool>("MyLib.Confirm");
        if (result)
        {
            BookService.DeleteBook(id);
            BookService.Save();
            await JsRunTime.InvokeVoidAsync("MyLib.Reload");
        }
    }
}